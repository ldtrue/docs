{
  "openapi": "3.0.1",
  "info": {
    "title": "TrueCall Api Specs",
    "description": "TrueCall internal API reference",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.truecall.com"
    }
  ],
  "paths": {
    "/associate": {
      "get": {
        "description": "Associates a specific TrueCall ID and dialed number combination to a customer's phone number. \n\n This is to be called as soon as the customer call takes place.",
        "parameters": [
          { "$ref": "#/components/parameters/ApiKeyQueryParam" },
          { "$ref": "#/components/parameters/TcIdQueryParam" },
          { "$ref": "#/components/parameters/DidQueryParam" },
          { "$ref": "#/components/parameters/ConsumerPhoneQueryParam" }
        ],
        "responses": {
          "200": {
            "description": "Associate response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/AssociateSuccess"},
                    { "$ref": "#/components/schemas/AssociateError" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/associate-verify": {
      "get": {
        "description": "Combines the Associate and Verify APIs: Associates a specific TrueCall ID and dialed number combination with a customer's phone number and runs a full verification on the TrueCall ID, validating all settings, including matching the consumer's phone number to the TrueCall ID. \n\n This stores the TrueCall ID to your account and allows all data to be accessed with Get Sessions and List Session. \n\n Typically used in Dual Identity campaigns (where the Generator is also the End User).",
        "parameters": [
          { "$ref": "#/components/parameters/ApiKeyQueryParam" },
          { "$ref": "#/components/parameters/TcIdQueryParam" },
          { "$ref": "#/components/parameters/DidQueryParam" },
          { "$ref": "#/components/parameters/ConsumerPhoneQueryParam" },
          { "$ref": "#/components/parameters/InsightsQueryParam" }
        ],
        "responses": {
          "200": {
            "description": "Associate and verify response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/VerifySuccess"},
                    { "$ref": "#/components/schemas/AssociateVerifyError" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/verify": {
      "get": {
        "description": "Runs a full verification on the TrueCall ID, validating all settings, including matching the consumer's phone number to the TrueCall ID. \n\n This stores the TrueCall ID to your account and allows all data to be accessed with Get Sessions and List Session. \n\n Typically used on POST.",
        "parameters": [
          { "$ref": "#/components/parameters/ApiKeyQueryParam" },
          { "$ref": "#/components/parameters/TcIdQueryParam" },
          { "$ref": "#/components/parameters/DidQueryParam" },
          { "$ref": "#/components/parameters/ConsumerPhoneQueryParam" },
          { "$ref": "#/components/parameters/InsightsQueryParam" }
        ],
        "responses": {
          "200": {
            "description": "Verify response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/VerifySuccess"},
                    { "$ref": "#/components/schemas/VerifyError" }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/check": {
      "get": {
        "description": "Runs a partial check on the TrueCall ID, verifying only that it exists, matches whitelisting and time window settings. \n\n This does not verify if the phone number matches the TrueCall ID and does not store the TrueCall ID. \n\n Typically used on PING.",
        "parameters": [
          { "$ref": "#/components/parameters/ApiKeyQueryParam" },
          { "$ref": "#/components/parameters/TcIdQueryParam" },
          { "$ref": "#/components/parameters/InsightsQueryParam" }
        ],
        "responses": {
          "200": {
            "description": "Check response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/VerifySuccess"},
                    { "$ref": "#/components/schemas/CheckError" }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TcReqId": {
        "type": "string",
        "example": "bnqtkot35h9bxgqi8ymva70x1easzqb7l7lt"
      },
      "TcStatusSuccess": {
        "type": "string",
        "enum": ["success"],
        "example": "success"
      },
      "TcStatusError": {
        "type": "string",
        "enum": ["error"],
        "example": "error"
      },
      "TcMessage": {
        "type": "string",
        "example": "Missing api_key"
      },
      "TcInsights": {
        "type": "object",
        "nullable": true,
        "properties": {
          "source_url": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "array",
            "nullable": true,
            "description": "IPs associated with the session, both IP v4 and v6 depending on availability",
            "items": {
              "type": "string"
            }
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "country_iso": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "integer",
            "nullable": true
          },
          "platform": {
            "type": "string",
            "nullable": true
          },
          "user_agent": {
            "type": "string",
            "nullable": true
          },
          "browser_name": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "AssociateTcErrorCode": {
        "type": "number",
        "example": 100,
        "description": "100 - Missing api_key \n\n 101 - Missing tc_id \n\n 102 - Missing consumer_phone \n\n 103 - Missing dialed_number \n\n 104 - Invalid consumer_phone \n\n 105 - Invalid dialed_number \n\n 106 - Invalid dialed_number \n\n 200 - Invalid api_key \n\n 201 - Invalid api_key \n\n 202 - Invalid api_key \n\n 203 - Invalid tc_id \n\n 204 - Invalid api_key \n\n 300 - Campaign source mismatch \n\n 400 - Already associated \n\n 500 - General failure \n\n 600 - User is suspended or pending config \n\n 700 - dialed_number not tracked \n\n 701 - dialed_number not matched"
      },
      "AssociateVerifyTcErrorCode": {
        "type": "number",
        "example": 101,
        "description": "100 - Missing api_key \n\n 101 - Missing tc_id \n\n 102 - Missing consumer_phone \n\n 103 - Missing dialed_number \n\n 104 - Invalid consumer_phone \n\n 105 - Invalid dialed_number \n\n 106 - Invalid dialed_number \n\n 200 - Invalid api_key \n\n 201 - Invalid api_key \n\n 202 - Invalid api_key \n\n 203 - Invalid tc_id \n\n 204 - Invalid api_key \n\n 205 - Session not associated \n\n 300 - Campaign source mismatch \n\n 400 - Already associated \n\n 500 - General failure \n\n 600 - User is suspended or pending config \n\n 601 - Team billing error \n\n 700 - dialed_number not tracked \n\n 701 - dialed_number not matched \n\n 800 - Fraud detected \n\n 801 - Unable to verify fraud"
      },
      "VerifyTcErrorCode": {
        "type": "number",
        "example": 102,
        "description": "100 - Missing api_key \n\n 101 - Missing tc_id \n\n 102 - Missing consumer_phone \n\n 103 - Missing dialed_number \n\n 104 - Invalid consumer_phone \n\n 105 - Invalid dialed_number \n\n 106 - Invalid dialed_number \n\n 200 - Invalid api_key \n\n 201 - Invalid api_key \n\n 202 - Invalid api_key \n\n 203 - Invalid tc_id \n\n 204 - Invalid api_key \n\n 205 - Session not associated \n\n 300 - Campaign source mismatch \n\n 500 - General failure \n\n 600 - User is suspended or pending config \n\n 601 - Team billing error \n\n 800 - Fraud detected \n\n 801 - Unable to verify fraud"
      },
      "CheckTcErrorCode": {
        "type": "number",
        "example": 800,
        "description": "100 - Missing api_key \n\n 101 - Missing tc_id \n\n 200 - Invalid api_key \n\n 201 - Invalid api_key \n\n 202 - Invalid api_key \n\n 203 - Invalid tc_id \n\n 204 - Invalid api_key \n\n 205 - Session not associated \n\n 300 - Campaign source mismatch \n\n 500 - General failure \n\n 600 - User is suspended or pending config \n\n 601 - Team billing error \n\n 800 - Fraud detected"
      },
      "AssociateSuccess": {
        "title": "Success",
        "type": "object",
        "properties": {
          "tc_req_id": {
            "$ref": "#/components/schemas/TcReqId"
          },
          "tc_status": {
            "$ref": "#/components/schemas/TcStatusSuccess"
          }
        }
      },
      "VerifySuccess": {
        "title": "Success",
        "type": "object",
        "properties": {
          "tc_req_id": {
            "$ref": "#/components/schemas/TcReqId"
          },
          "tc_status": {
            "$ref": "#/components/schemas/TcStatusSuccess"
          },
          "tc_insights": {
            "$ref": "#/components/schemas/TcInsights"
          }
        }
      },
      "AssociateError": {
        "type": "object",
        "properties": {
          "tc_req_id": {
            "$ref": "#/components/schemas/TcReqId"
          },
          "tc_status": {
            "$ref": "#/components/schemas/TcStatusError"
          },
          "tc_error_code": {
            "$ref": "#/components/schemas/AssociateTcErrorCode"
          },
          "tc_message": {
            "$ref": "#/components/schemas/TcMessage"
          }
        }
      },
      "AssociateVerifyError": {
        "type": "object",
        "properties": {
          "tc_req_id": {
            "$ref": "#/components/schemas/TcReqId"
          },
          "tc_status": {
            "$ref": "#/components/schemas/TcStatusError"
          },
          "tc_error_code": {
            "$ref": "#/components/schemas/AssociateVerifyTcErrorCode"
          },
          "tc_message": {
            "$ref": "#/components/schemas/TcMessage"
          },
          "tc_insights": {
            "$ref": "#/components/schemas/TcInsights"
          }
        }
      },
      "VerifyError": {
        "type": "object",
        "properties": {
          "tc_req_id": {
            "$ref": "#/components/schemas/TcReqId"
          },
          "tc_status": {
            "$ref": "#/components/schemas/TcStatusError"
          },
          "tc_error_code": {
            "$ref": "#/components/schemas/AssociateVerifyTcErrorCode"
          },
          "tc_message": {
            "$ref": "#/components/schemas/TcMessage"
          },
          "tc_insights": {
            "$ref": "#/components/schemas/TcInsights"
          }
        }
      },
      "CheckError": {
        "type": "object",
        "properties": {
          "tc_req_id": {
            "$ref": "#/components/schemas/TcReqId"
          },
          "tc_status": {
            "$ref": "#/components/schemas/TcStatusError"
          },
          "tc_error_code": {
            "$ref": "#/components/schemas/AssociateVerifyTcErrorCode"
          },
          "tc_message": {
            "$ref": "#/components/schemas/TcMessage"
          },
          "tc_insights": {
            "$ref": "#/components/schemas/TcInsights"
          }
        }
      }
    },
    "responses": {

    },
    "parameters": {

      "ApiKeyQueryParam": {
        "name": "api_key",
        "in": "query",
        "description": "Campaign's API key",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "TcIdQueryParam": {
        "name": "tc_id",
        "in": "query",
        "description": "TrueCall session ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ConsumerPhoneQueryParam": {
        "name": "consumer_phone",
        "in": "query",
        "description": "Consumer's phone number",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "DidQueryParam": {
        "name": "dialed_number",
        "in": "query",
        "description": "Number dialed by consumer",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "InsightsQueryParam": {
        "name": "insights",
        "in": "query",
        "description": "Session data to include in the response. \n\n Available options are: \n\n source_url | ip | city | country | country_iso | timezone | platform | user_agent | browser_name | created_at_ts | created_at_iso \n\n Those can be combined to get specifically what's needed: \n\n insights=source_url,city,country,created_at_iso",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    }
  }
}